---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`

# Name of this project
name: Terraform AWS EC2

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-ec2

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/clouddrove/terraform-aws-ec2.svg"
    url: "https://github.com/clouddrove/terraform-aws-ec2/releases/latest"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-ec2/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-ec2/actions/workflows/tfsec.yml"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"

prerequesties:
  - name: Terraform 1.4.6
    url: https://learn.hashicorp.com/terraform/getting-started/install.html

#  description of this project
description: |-
  Terraform module to create an EC2 resource on AWS with ElasticC IP Addresses and Elastic Block Store.

# extra content
include:
  - "terraform.md"

# How to use this project
# How to use this project
usage: |-
  Here is examples of how you can use this module in your inventory structure:
  ### Basic Example
  ```hcl
      module "ec2" {
      source      = "clouddrove/ec2/aws"
      version     = "1.3.1"
  
      name        = "ec2"
      environment = "test"
      label_order = ["name", "environment"]

      ## security-group
      vpc_id            = module.vpc.vpc_id
      ssh_allowed_ip    = ["0.0.0.0/0"]
      ssh_allowed_ports = [22]
    
      #instance
      instance_count = 1
      ami            = "ami-08d658f84a6d84a80"
      instance_type  = "c4.xlarge"
    
      #Networking
      subnet_ids = tolist(module.public_subnets.public_subnet_id)
    
      #Keypair
      public_key = "ssh-rsa ArJh5/gxz7sbSSseLd+ldHEOM3+lajUSGqWk3Bw/NgygEf1Kgw7gyK3jsTVVcokhK3TDuR3pi4u2QDR2tvLXddPKd37a2S7rjeqecw+XRW9559zKaR7RJJfjO1u1Onc2tgA3y0btdju2bcYBtFkRVOLwpog8CvslYEDV1Vf9HNeh9A3yOS6Pkjq6gDMrsUVF89ps3zuLmdVBIlCOnJDkwHK71lKihGKdkeXEtAj0aOQzAJsIpDFXz7vob9OiA/fb2T3t4R1EwEsPEnYVczKMsqUyqa+EE36bItcZHQyCPVN7+bRJyJpPcrfrsAa4yMtiHUUiecPdL/6HYwGHxxl2UQR5NE4NR35NI86Q+q1kNOc5VctxxQOTHBwKHaGvKLk4c5gHXaEl8yyYL0wVkL00KYx3GCh1LvRdQ"
    
      #IAM
      iam_instance_profile = module.iam-role.name
    
      #Root Volume
      root_block_device = [
        {
          volume_type           = "gp2"
          volume_size           = 15
          delete_on_termination = true
        }
      ]
    
      #EBS Volume
      ebs_volume_enabled = false
      ebs_volume_type    = "gp2"
      ebs_volume_size    = 30
    
      #Tags
      instance_tags = { "snapshot" = true }
  
    }
  ```

  ### ebs_mount
  ```hcl
      module "ec2" {
      source        = "clouddrove/ec2/aws"
      version       = "1.3.1"
  
      name          = "ec2"
      environment   = "test"
      label_order   = ["name", "environment"]

      ## security group 
      vpc_id            = module.vpc.vpc_id
      ssh_allowed_ip    = ["0.0.0.0/0"]
      ssh_allowed_ports = [22]
    
      #Instance
      instance_count = 1
      ami            = "ami-08d658f84a6d84a80"
      instance_type  = "t2.nano"
    
      #Keypair
      public_key = "HEOM3+lajUSGqWk3Bw/NgygEf1Kgw7gyK3jsTVVcokhK3TDuR3pi4u2QDR2tvLXddPKd37a2S7rjeqecw+XRW9559zKaR7RJJfjO1u1Onc2tgA3y0btdju2bcYBtFkRVOLwpog8CvslYEDLmdVBIlCOnJDkwHK71lKihGKdkeXEtAj0aOQzAJsIpDFXz7vob9OiA/fb2T3t4R1EwEsPEnYVczKMsqUyqa+EE36bItcZHQyCPVN7+bRJyJpPcrfrsAa4yMtiHUUiecPdL/6HYwGHxA5rUX3uD2UBm6sbGBH00ZCj6yUxl2UQR5NE4NR35NI86Q+q1kNOc5VctxxQOTHBwKHaGvKLk4c5gHXaEl8yyYL0wVkL00KYx3GCh1"
    
      #Networking
      subnet_ids = tolist(module.public_subnets.public_subnet_id)
    
      #IAM
      iam_instance_profile = module.iam-role.name
    
      #Root Volume
      root_block_device = [
        {
          volume_type           = "gp2"
          volume_size           = 15
          delete_on_termination = true
        }
      ]
    
      #EBS Volume
      ebs_volume_enabled = true
      ebs_volume_type    = "gp2"
      ebs_volume_size    = 30
    
      #Tags
      instance_tags = { "snapshot" = true }
    
      #Mount EBS With User Data
      user_data = file("user-data.sh")
    }
  ```

  ### spot-instance
  ```hcl
      module "spot-ec2" {
      source      = "clouddrove/ec2/aws"
      version     = "1.3.1"
  
      name        = "ec2"
      environment = "test"
      label_order = ["name", "environment"]
    
      ## security-group
      vpc_id            = module.vpc.vpc_id
      ssh_allowed_ip    = ["0.0.0.0/0"]
      ssh_allowed_ports = [22]
    
      #Keypair
      public_key = "h5/gxz7sbSSseLd+ldHEOM3+lajUSGqWk3Bw/NgygEf1Kgw7gyK3jsTVVcokhK3TDuR3pi4u2QDR2tvLXddPKd37a2S7rjeqecw+XRW9559zKaR7RJJfjO1u1Onc2tgA3y0btdju2bcYBtFkRVOLwpog8CvslYEDV1Vf9HNeh9A3yOS6Pkjq6gDMrsUVF89ps3zuLmdVBIlCOnJDkwHK71lKihGKdkeXEtAj0aOQzAJsIpDFXz7vob9OiA/fb2T3t4R1EwEsPEnYVczKMsqUyqa+EE36bItcZHQyCPVN7+bRJyJpPcrfrsAa4yMtiHUUiecPdL/6HYwGHxA5rUX3uD2UBm6sbGBHxQOTHBwKHaGvKLk4c5gHXaEl8yyYL0wVkL00KYx3GCh1LvRdQL8fvzImBCNg"
    
      # Spot-instance
      spot_price                          = "0.3"
      spot_wait_for_fulfillment           = true
      spot_type                           = "persistent"
      spot_instance_interruption_behavior = "terminate"
      spot_instance_enabled               = true
      spot_instance_count                 = 1
      spot_ami                            = "ami-08d658f84a6d84a80"
      instance_type                       = "c4.xlarge"
    
      #Networking
      subnet_ids = tolist(module.public_subnets.public_subnet_id)
    
      #IAM
      iam_instance_profile = module.iam-role.name
    
      #Root Volume
      root_block_device = [
      {
      volume_type           = "gp2"
      volume_size           = 15
      delete_on_termination = true
      }
      ]
    
      #EBS Volume
      ebs_volume_enabled = true
      ebs_volume_type    = "gp2"
      ebs_volume_size    = 30
    
      #Tags
      spot_instance_tags = { "snapshot" = true }
    
    }
  ```